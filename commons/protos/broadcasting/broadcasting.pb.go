// Code generated by protoc-gen-go.
// source: broadcasting/broadcasting.proto
// DO NOT EDIT!

/*
Package broadcasting is a generated protocol buffer package.

It is generated from these files:
	broadcasting/broadcasting.proto

It has these top-level messages:
	Room
	Num
	Barrages
	Barrage
*/
package broadcasting

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Room struct {
	ID string `protobuf:"bytes,1,opt,name=ID,json=iD" json:"ID,omitempty"`
}

func (m *Room) Reset()                    { *m = Room{} }
func (m *Room) String() string            { return proto.CompactTextString(m) }
func (*Room) ProtoMessage()               {}
func (*Room) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Num struct {
	RoomID string `protobuf:"bytes,1,opt,name=RoomID,json=roomID" json:"RoomID,omitempty"`
	Num    uint32 `protobuf:"varint,2,opt,name=Num,json=num" json:"Num,omitempty"`
}

func (m *Num) Reset()                    { *m = Num{} }
func (m *Num) String() string            { return proto.CompactTextString(m) }
func (*Num) ProtoMessage()               {}
func (*Num) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Barrages struct {
	Barrages []*Barrage `protobuf:"bytes,1,rep,name=barrages" json:"barrages,omitempty"`
}

func (m *Barrages) Reset()                    { *m = Barrages{} }
func (m *Barrages) String() string            { return proto.CompactTextString(m) }
func (*Barrages) ProtoMessage()               {}
func (*Barrages) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Barrages) GetBarrages() []*Barrage {
	if m != nil {
		return m.Barrages
	}
	return nil
}

type Barrage struct {
	UserID   string `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	Nickname string `protobuf:"bytes,2,opt,name=nickname" json:"nickname,omitempty"`
	Content  string `protobuf:"bytes,3,opt,name=content" json:"content,omitempty"`
	PubTime  int64  `protobuf:"varint,4,opt,name=pubTime" json:"pubTime,omitempty"`
}

func (m *Barrage) Reset()                    { *m = Barrage{} }
func (m *Barrage) String() string            { return proto.CompactTextString(m) }
func (*Barrage) ProtoMessage()               {}
func (*Barrage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func init() {
	proto.RegisterType((*Room)(nil), "broadcasting.Room")
	proto.RegisterType((*Num)(nil), "broadcasting.Num")
	proto.RegisterType((*Barrages)(nil), "broadcasting.Barrages")
	proto.RegisterType((*Barrage)(nil), "broadcasting.Barrage")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for Broadcasting service

type BroadcastingClient interface {
	RecentBarrageList(ctx context.Context, in *Room, opts ...grpc.CallOption) (*Barrages, error)
	CurrentAudienceNum(ctx context.Context, in *Room, opts ...grpc.CallOption) (*Num, error)
}

type broadcastingClient struct {
	cc *grpc.ClientConn
}

func NewBroadcastingClient(cc *grpc.ClientConn) BroadcastingClient {
	return &broadcastingClient{cc}
}

func (c *broadcastingClient) RecentBarrageList(ctx context.Context, in *Room, opts ...grpc.CallOption) (*Barrages, error) {
	out := new(Barrages)
	err := grpc.Invoke(ctx, "/broadcasting.Broadcasting/RecentBarrageList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *broadcastingClient) CurrentAudienceNum(ctx context.Context, in *Room, opts ...grpc.CallOption) (*Num, error) {
	out := new(Num)
	err := grpc.Invoke(ctx, "/broadcasting.Broadcasting/CurrentAudienceNum", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Broadcasting service

type BroadcastingServer interface {
	RecentBarrageList(context.Context, *Room) (*Barrages, error)
	CurrentAudienceNum(context.Context, *Room) (*Num, error)
}

func RegisterBroadcastingServer(s *grpc.Server, srv BroadcastingServer) {
	s.RegisterService(&_Broadcasting_serviceDesc, srv)
}

func _Broadcasting_RecentBarrageList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Room)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BroadcastingServer).RecentBarrageList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/broadcasting.Broadcasting/RecentBarrageList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BroadcastingServer).RecentBarrageList(ctx, req.(*Room))
	}
	return interceptor(ctx, in, info, handler)
}

func _Broadcasting_CurrentAudienceNum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Room)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BroadcastingServer).CurrentAudienceNum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/broadcasting.Broadcasting/CurrentAudienceNum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BroadcastingServer).CurrentAudienceNum(ctx, req.(*Room))
	}
	return interceptor(ctx, in, info, handler)
}

var _Broadcasting_serviceDesc = grpc.ServiceDesc{
	ServiceName: "broadcasting.Broadcasting",
	HandlerType: (*BroadcastingServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RecentBarrageList",
			Handler:    _Broadcasting_RecentBarrageList_Handler,
		},
		{
			MethodName: "CurrentAudienceNum",
			Handler:    _Broadcasting_CurrentAudienceNum_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("broadcasting/broadcasting.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 274 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x91, 0xc1, 0x6b, 0xc2, 0x30,
	0x14, 0xc6, 0x8d, 0x95, 0x5a, 0xdf, 0xdc, 0x98, 0x0f, 0x56, 0x82, 0x97, 0x95, 0x9c, 0x7a, 0x52,
	0xe6, 0xce, 0x1e, 0x74, 0x5e, 0x06, 0xc3, 0x43, 0xd8, 0x3f, 0xd0, 0xd6, 0x20, 0x61, 0x24, 0x71,
	0x69, 0xf2, 0x7f, 0xec, 0x4f, 0x1e, 0xcd, 0x6a, 0xd7, 0x82, 0xb7, 0xfc, 0xbe, 0xef, 0x91, 0xef,
	0xcb, 0x0b, 0x3c, 0x97, 0xd6, 0x14, 0xa7, 0xaa, 0xa8, 0x9d, 0xd4, 0xe7, 0x75, 0x1f, 0x56, 0x17,
	0x6b, 0x9c, 0xc1, 0x79, 0x5f, 0x63, 0x29, 0x4c, 0xb8, 0x31, 0x0a, 0x1f, 0x60, 0xfc, 0x7e, 0xa0,
	0x24, 0x23, 0xf9, 0x8c, 0x8f, 0xe5, 0x81, 0xad, 0x21, 0x3a, 0x7a, 0x85, 0x29, 0xc4, 0x8d, 0xdd,
	0x59, 0xb1, 0x0d, 0x84, 0x8f, 0xc1, 0xa6, 0xe3, 0x8c, 0xe4, 0xf7, 0x3c, 0xd2, 0x5e, 0xb1, 0x2d,
	0x24, 0xfb, 0xc2, 0xda, 0xe2, 0x2c, 0x6a, 0x7c, 0x81, 0xa4, 0x6c, 0xcf, 0x94, 0x64, 0x51, 0x7e,
	0xb7, 0x79, 0x5a, 0x0d, 0x9a, 0xb4, 0x93, 0xbc, 0x1b, 0x63, 0xdf, 0x30, 0x6d, 0xc5, 0x26, 0xd3,
	0xd7, 0xc2, 0xfe, 0x67, 0xfe, 0x11, 0x2e, 0x21, 0xd1, 0xb2, 0xfa, 0xd2, 0x85, 0x12, 0x21, 0x78,
	0xc6, 0x3b, 0x46, 0x0a, 0xd3, 0xca, 0x68, 0x27, 0xb4, 0xa3, 0x51, 0xb0, 0xae, 0xd8, 0x38, 0x17,
	0x5f, 0x7e, 0x4a, 0x25, 0xe8, 0x24, 0x23, 0x79, 0xc4, 0xaf, 0xb8, 0xf9, 0x21, 0x30, 0xdf, 0xf7,
	0x5a, 0xe1, 0x0e, 0x16, 0x5c, 0x54, 0x42, 0xbb, 0xb6, 0xc9, 0x87, 0xac, 0x1d, 0xe2, 0xb0, 0x79,
	0xb3, 0x8d, 0x65, 0x7a, 0xf3, 0x35, 0x35, 0x1b, 0xe1, 0x16, 0xf0, 0xcd, 0x5b, 0x2b, 0xb4, 0xdb,
	0xf9, 0x93, 0x14, 0xba, 0x12, 0xcd, 0x16, 0x6f, 0xdd, 0xb1, 0x18, 0x6a, 0x47, 0xaf, 0xd8, 0xa8,
	0x8c, 0xc3, 0x17, 0xbd, 0xfe, 0x06, 0x00, 0x00, 0xff, 0xff, 0x18, 0xc1, 0x25, 0xbd, 0xc5, 0x01,
	0x00, 0x00,
}
