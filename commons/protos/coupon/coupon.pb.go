// Code generated by protoc-gen-go.
// source: coupon/coupon.proto
// DO NOT EDIT!

/*
Package coupon is a generated protocol buffer package.

It is generated from these files:
	coupon/coupon.proto

It has these top-level messages:
	SendCoupon
	TakeCoupon
	Status
	Page
	CouponInfo
	Coupons
*/
package coupon

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SendCoupon struct {
	CouponID    string `protobuf:"bytes,1,opt,name=CouponID,json=couponID" json:"CouponID,omitempty"`
	BroadcastID string `protobuf:"bytes,2,opt,name=BroadcastID,json=broadcastID" json:"BroadcastID,omitempty"`
	UserID      string `protobuf:"bytes,3,opt,name=UserID,json=userID" json:"UserID,omitempty"`
	Number      int32  `protobuf:"varint,4,opt,name=Number,json=number" json:"Number,omitempty"`
	Duration    int64  `protobuf:"varint,5,opt,name=Duration,json=duration" json:"Duration,omitempty"`
	TypeID      int32  `protobuf:"varint,6,opt,name=TypeID,json=typeID" json:"TypeID,omitempty"`
}

func (m *SendCoupon) Reset()                    { *m = SendCoupon{} }
func (m *SendCoupon) String() string            { return proto.CompactTextString(m) }
func (*SendCoupon) ProtoMessage()               {}
func (*SendCoupon) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type TakeCoupon struct {
	SendCouponID string `protobuf:"bytes,1,opt,name=SendCouponID,json=sendCouponID" json:"SendCouponID,omitempty"`
	UserID       string `protobuf:"bytes,2,opt,name=UserID,json=userID" json:"UserID,omitempty"`
}

func (m *TakeCoupon) Reset()                    { *m = TakeCoupon{} }
func (m *TakeCoupon) String() string            { return proto.CompactTextString(m) }
func (*TakeCoupon) ProtoMessage()               {}
func (*TakeCoupon) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Status struct {
	Success      bool   `protobuf:"varint,1,opt,name=Success,json=success" json:"Success,omitempty"`
	SendCouponID string `protobuf:"bytes,2,opt,name=SendCouponID,json=sendCouponID" json:"SendCouponID,omitempty"`
}

func (m *Status) Reset()                    { *m = Status{} }
func (m *Status) String() string            { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()               {}
func (*Status) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type Page struct {
	Num    int32  `protobuf:"varint,1,opt,name=num" json:"num,omitempty"`
	Size   int32  `protobuf:"varint,2,opt,name=size" json:"size,omitempty"`
	UserID string `protobuf:"bytes,3,opt,name=userID" json:"userID,omitempty"`
}

func (m *Page) Reset()                    { *m = Page{} }
func (m *Page) String() string            { return proto.CompactTextString(m) }
func (*Page) ProtoMessage()               {}
func (*Page) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type CouponInfo struct {
	CouponID    string  `protobuf:"bytes,1,opt,name=couponID" json:"couponID,omitempty"`
	Name        string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Image       string  `protobuf:"bytes,3,opt,name=image" json:"image,omitempty"`
	Number      int64   `protobuf:"varint,4,opt,name=number" json:"number,omitempty"`
	Description string  `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	Price       float32 `protobuf:"fixed32,6,opt,name=price" json:"price,omitempty"`
}

func (m *CouponInfo) Reset()                    { *m = CouponInfo{} }
func (m *CouponInfo) String() string            { return proto.CompactTextString(m) }
func (*CouponInfo) ProtoMessage()               {}
func (*CouponInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type Coupons struct {
	Coupons  []*CouponInfo `protobuf:"bytes,1,rep,name=coupons" json:"coupons,omitempty"`
	TotalNum int64         `protobuf:"varint,2,opt,name=totalNum" json:"totalNum,omitempty"`
}

func (m *Coupons) Reset()                    { *m = Coupons{} }
func (m *Coupons) String() string            { return proto.CompactTextString(m) }
func (*Coupons) ProtoMessage()               {}
func (*Coupons) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Coupons) GetCoupons() []*CouponInfo {
	if m != nil {
		return m.Coupons
	}
	return nil
}

func init() {
	proto.RegisterType((*SendCoupon)(nil), "coupon.SendCoupon")
	proto.RegisterType((*TakeCoupon)(nil), "coupon.TakeCoupon")
	proto.RegisterType((*Status)(nil), "coupon.Status")
	proto.RegisterType((*Page)(nil), "coupon.Page")
	proto.RegisterType((*CouponInfo)(nil), "coupon.CouponInfo")
	proto.RegisterType((*Coupons)(nil), "coupon.Coupons")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for Coupon service

type CouponClient interface {
	List(ctx context.Context, in *Page, opts ...grpc.CallOption) (*Coupons, error)
	Send(ctx context.Context, in *SendCoupon, opts ...grpc.CallOption) (*Status, error)
	Take(ctx context.Context, in *TakeCoupon, opts ...grpc.CallOption) (*Status, error)
}

type couponClient struct {
	cc *grpc.ClientConn
}

func NewCouponClient(cc *grpc.ClientConn) CouponClient {
	return &couponClient{cc}
}

func (c *couponClient) List(ctx context.Context, in *Page, opts ...grpc.CallOption) (*Coupons, error) {
	out := new(Coupons)
	err := grpc.Invoke(ctx, "/coupon.Coupon/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponClient) Send(ctx context.Context, in *SendCoupon, opts ...grpc.CallOption) (*Status, error) {
	out := new(Status)
	err := grpc.Invoke(ctx, "/coupon.Coupon/Send", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponClient) Take(ctx context.Context, in *TakeCoupon, opts ...grpc.CallOption) (*Status, error) {
	out := new(Status)
	err := grpc.Invoke(ctx, "/coupon.Coupon/Take", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Coupon service

type CouponServer interface {
	List(context.Context, *Page) (*Coupons, error)
	Send(context.Context, *SendCoupon) (*Status, error)
	Take(context.Context, *TakeCoupon) (*Status, error)
}

func RegisterCouponServer(s *grpc.Server, srv CouponServer) {
	s.RegisterService(&_Coupon_serviceDesc, srv)
}

func _Coupon_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Page)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/coupon.Coupon/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServer).List(ctx, req.(*Page))
	}
	return interceptor(ctx, in, info, handler)
}

func _Coupon_Send_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendCoupon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServer).Send(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/coupon.Coupon/Send",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServer).Send(ctx, req.(*SendCoupon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Coupon_Take_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TakeCoupon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServer).Take(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/coupon.Coupon/Take",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServer).Take(ctx, req.(*TakeCoupon))
	}
	return interceptor(ctx, in, info, handler)
}

var _Coupon_serviceDesc = grpc.ServiceDesc{
	ServiceName: "coupon.Coupon",
	HandlerType: (*CouponServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _Coupon_List_Handler,
		},
		{
			MethodName: "Send",
			Handler:    _Coupon_Send_Handler,
		},
		{
			MethodName: "Take",
			Handler:    _Coupon_Take_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("coupon/coupon.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 422 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x53, 0x4b, 0x8e, 0xd4, 0x30,
	0x10, 0x25, 0x9d, 0xc4, 0xdd, 0x53, 0xdd, 0x02, 0x64, 0x10, 0x8a, 0x7a, 0x15, 0x79, 0x43, 0x16,
	0xa3, 0x41, 0x1a, 0x6e, 0x00, 0x11, 0x22, 0x12, 0x1a, 0x21, 0x67, 0x38, 0x80, 0xdb, 0x31, 0xa3,
	0x08, 0x62, 0x47, 0xb1, 0xbd, 0x80, 0x3b, 0x70, 0x09, 0x0e, 0xc0, 0x19, 0x91, 0x3f, 0x9d, 0x04,
	0x35, 0xb3, 0x4a, 0xbd, 0x72, 0xf9, 0xd5, 0xf3, 0xab, 0x0a, 0xbc, 0xe0, 0xca, 0x8e, 0x4a, 0xbe,
	0x09, 0x9f, 0x9b, 0x71, 0x52, 0x46, 0x61, 0x14, 0x10, 0xf9, 0x93, 0x00, 0xb4, 0x42, 0x76, 0xef,
	0x3d, 0xc4, 0x47, 0xd8, 0x85, 0xa8, 0xa9, 0x8b, 0xa4, 0x4c, 0xaa, 0x2b, 0xba, 0xe3, 0x11, 0xe3,
	0x12, 0xf6, 0xef, 0x26, 0xc5, 0x3a, 0xce, 0xb4, 0x69, 0xea, 0x62, 0xe3, 0x8f, 0xf7, 0xa7, 0x25,
	0x85, 0x5f, 0x01, 0xfa, 0xa2, 0xc5, 0xd4, 0xd4, 0x45, 0xea, 0x0f, 0x91, 0xf5, 0xc8, 0xe5, 0xef,
	0xec, 0x70, 0x12, 0x53, 0x91, 0x95, 0x49, 0x95, 0x53, 0x24, 0x3d, 0x72, 0xdd, 0x6a, 0x3b, 0x31,
	0xd3, 0x2b, 0x59, 0xe4, 0x65, 0x52, 0xa5, 0x74, 0xd7, 0x45, 0xec, 0xee, 0xdc, 0xff, 0x18, 0x45,
	0x53, 0x17, 0x28, 0xdc, 0x31, 0x1e, 0x91, 0x8f, 0x00, 0xf7, 0xec, 0x9b, 0x88, 0x7a, 0x09, 0x1c,
	0x16, 0xf5, 0xb3, 0xe6, 0x83, 0x5e, 0xe5, 0x56, 0xaa, 0x36, 0x6b, 0x55, 0xe4, 0x03, 0xa0, 0xd6,
	0x30, 0x63, 0x35, 0x2e, 0x60, 0xdb, 0x5a, 0xce, 0x85, 0xd6, 0x9e, 0x60, 0x47, 0xb7, 0x3a, 0xc0,
	0x0b, 0xfe, 0xcd, 0x25, 0x3f, 0xa9, 0x21, 0xfb, 0xcc, 0x1e, 0x04, 0x7e, 0x0e, 0xa9, 0xb4, 0x83,
	0x67, 0xc8, 0xa9, 0x0b, 0x31, 0x86, 0x4c, 0xf7, 0x3f, 0x85, 0xbf, 0x95, 0x53, 0x1f, 0x3b, 0x35,
	0xf6, 0x3f, 0x1e, 0x91, 0xdf, 0x09, 0x40, 0xa4, 0x94, 0x5f, 0x95, 0xb3, 0x86, 0x3f, 0x36, 0x08,
	0x0c, 0x99, 0x64, 0x83, 0x88, 0x62, 0x7c, 0x8c, 0x5f, 0x42, 0xde, 0x0f, 0xec, 0x41, 0x44, 0xd6,
	0x00, 0x5c, 0x33, 0xb9, 0x18, 0x9f, 0xce, 0xc6, 0x97, 0xb0, 0xef, 0x84, 0xe6, 0x53, 0x3f, 0xce,
	0xde, 0x5f, 0xd1, 0x75, 0xca, 0xf1, 0x8d, 0x53, 0xcf, 0x85, 0x77, 0x7f, 0x43, 0x03, 0x20, 0x2d,
	0x6c, 0x83, 0x46, 0x8d, 0xaf, 0x61, 0x1b, 0x04, 0x39, 0xcf, 0xd2, 0x6a, 0x7f, 0x8b, 0x6f, 0xe2,
	0x82, 0x2d, 0xaf, 0xa0, 0xe7, 0x12, 0xf7, 0x1c, 0xa3, 0x0c, 0xfb, 0x7e, 0x67, 0x07, 0x2f, 0x3b,
	0xa5, 0x33, 0xbe, 0xfd, 0x95, 0x00, 0x8a, 0xe3, 0x7c, 0x0d, 0xd9, 0xa7, 0x5e, 0x1b, 0x7c, 0x38,
	0x73, 0x39, 0x63, 0x8f, 0xcf, 0xfe, 0x65, 0xd6, 0xe4, 0x09, 0xbe, 0x86, 0xcc, 0xcd, 0x05, 0xcf,
	0x4d, 0x97, 0x29, 0x1d, 0x9f, 0xce, 0x39, 0x3f, 0xdd, 0x50, 0xed, 0x76, 0x66, 0xa9, 0x5e, 0x36,
	0xe8, 0xb2, 0xfa, 0x84, 0xfc, 0x1f, 0xf2, 0xf6, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc9, 0xbc,
	0x0d, 0x2b, 0x38, 0x03, 0x00, 0x00,
}
